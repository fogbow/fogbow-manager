#!/bin/sh
ifconfig eth0 mtu 1420 | true
IS_OPENSSH=$(ssh -ver 2>&1 | grep OpenSSH)
IS_NEW_OPENSSH=$(ssh -V 2>&1 | grep OpenSSH)
IS_DROPBEAR=$(ssh -ver 2>&1 | grep Dropbear)
if [ -n "$IS_OPENSSH" ] || [ -n "$IS_NEW_OPENSSH" ]; then
  SSH_OPTIONS="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ServerAliveInterval=30"
elif [ -n "$IS_DROPBEAR" ]; then
  SSH_OPTIONS="-y -K 30"
fi
cat > /bin/fogbow-autossh << EOL
#!/bin/sh
autossh() {
  while true; do
    
    REMOTE_PORT="\$(curl -X POST #TOKEN_HOST#:#TOKEN_HOST_HTTP_PORT#/token/#TOKEN_ID#)"
    if [ -z "\$REMOTE_PORT" ]; then
      echo "No remote port available for #TOKEN_ID#, will try again in 30 seconds"
      sleep 30
      continue
    fi

    echo "Starting tunnel in port \$REMOTE_PORT"
    
    OLD_IFS=\$IFS              # save internal field separator
    IFS=":"                    # set it to ':'
    set -- \$REMOTE_PORT       # make the result positional parameters
    IFS=\$OLD_IFS              # restore IFS
    PORT=\$1
    SSH_SERVER_PORT=\$2

    echo "Command: ssh $SSH_OPTIONS -N -R 0.0.0.0:\$PORT:localhost:22 #TOKEN_ID#@#TOKEN_HOST# -p \$SSH_SERVER_PORT"
    ssh $SSH_OPTIONS -N -R 0.0.0.0:\$PORT:localhost:22 #TOKEN_ID#@#TOKEN_HOST# -p \$SSH_SERVER_PORT
    sleep 5
  done
}
autossh &
EOL
chmod +x /bin/fogbow-autossh
setsid /bin/fogbow-autossh
cat > /bin/create-fogbow-tunnel << EOL
#!/bin/sh
TOKEN_VAR=\$1
LOCAL_PORT=\$2
auto_extra_port(){
	while true; do
	    
	    echo "Requesting port curl -X POST #TOKEN_HOST#:#TOKEN_HOST_HTTP_PORT#/token/#TOKEN_ID#-\$TOKEN_VAR"
	    REMOTE_PORT=\$(curl -X POST #TOKEN_HOST#:#TOKEN_HOST_HTTP_PORT#/token/#TOKEN_ID#-\$TOKEN_VAR)
	    OLD_IFS=\$IFS               # save internal field separator
	    IFS=":"                     # set it to ':'
	    set -- \$REMOTE_PORT        # make the result positional parameters
	    IFS=\$OLD_IFS               # restore IFS
	    PORT=\$1
	    SSH_SERVER_PORT=\$2
	    echo "Recives PORT:\$PORT and SSH SERVER PORT: \$SSH_SERVER_PORT"
	   
	    echo "Command: ssh $SSH_OPTIONS -f -N -R 0.0.0.0:\$PORT:localhost:\$LOCAL_PORT #TOKEN_ID#-\$TOKEN_VAR@#TOKEN_HOST# -p \$SSH_SERVER_PORT" 
	    ssh $SSH_OPTIONS -N -R 0.0.0.0:\$PORT:localhost:\$LOCAL_PORT #TOKEN_ID#-\$TOKEN_VAR@#TOKEN_HOST# -p \$SSH_SERVER_PORT
	    
	    sleep 5
	done
}
auto_extra_port &
EOL
chmod +x /bin/create-fogbow-tunnel

config_setup="config setup
 charondebug=all
 uniqueids=yes
 strictcrlpolicy=no
conn %default
conn tunnel"

myIP=`ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'`

tunnel_param_configs=" left=$myIP
 leftsourceip=#LEFT_SOURCE_IP#
 right=#RIGHT_IP#
 rightsubnet=#RIGHT_SUBNET#"

other_tunnel_configs=" ike=aes256-sha2_256-modp1024!
 esp=aes256-sha2_256!
 keyingtries=0
 ikelifetime=1h
 lifetime=8h
 dpddelay=30
 dpdtimeout=120
 dpdaction=restart
 authby=secret
 auto=start
 keyexchange=ikev2
 type=tunnel
 closeaction=restart"

tmp_var="$config_setup
$tunnel_param_configs
$other_tunnel_configs"

cat > /bin/fogbow-config-client-federated << EOL
#!/bin/sh
set -e
if [ "true" = "#IS_FEDERATED_VM#" ]; then
    apt update
    apt install strongswan -y
    apt install opensc -y
    apt install libgmp10 -y
    apt install libgmp-dev -y
    apt install libssl-dev -y

    echo "$tmp_var" > /etc/ipsec.conf

    echo ": PSK '123'" > /etc/ipsec.secrets
    ipsec rereadsecrets
    ipsec restart
fi
EOL
chmod +x /bin/fogbow-config-client-federated
setsid /bin/fogbow-config-client-federated
